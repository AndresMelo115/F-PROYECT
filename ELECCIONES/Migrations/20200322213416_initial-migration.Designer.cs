// <auto-generated />
using System;
using ELECCIONES.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ELECCIONES.Migrations
{
    [DbContext(typeof(EleccionesContext))]
    [Migration("20200322213416_initial-migration")]
    partial class initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ELECCIONES.Models.Candidatos", b =>
                {
                    b.Property<int>("IdCandidatos")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_Candidatos")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<bool?>("Estado");

                    b.Property<string>("FotoPerfil")
                        .HasColumnName("Foto_Perfil")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int>("PartidoPertenece")
                        .HasColumnName("Partido_Pertenece");

                    b.Property<int>("PuestoAspira")
                        .HasColumnName("Puesto_Aspira");

                    b.HasKey("IdCandidatos")
                        .HasName("PK__Candidat__FFAB99880628D312");

                    b.HasIndex("PartidoPertenece");

                    b.HasIndex("PuestoAspira");

                    b.ToTable("Candidatos");
                });

            modelBuilder.Entity("ELECCIONES.Models.Ciudadanos", b =>
                {
                    b.Property<int>("IdCiudadanos")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_Ciudadanos")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int>("Cedula");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("Estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("IdCiudadanos")
                        .HasName("PK__Ciudadan__A7ACDF178EAA5AA0");

                    b.ToTable("Ciudadanos");
                });

            modelBuilder.Entity("ELECCIONES.Models.Elecciones", b =>
                {
                    b.Property<int>("IdElecciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_Elecciones")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estado");

                    b.Property<string>("FechaRealizacion")
                        .IsRequired()
                        .HasColumnName("Fecha_Realizacion")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int>("IdCandidatos")
                        .HasColumnName("idCandidatos");

                    b.Property<int>("IdCiudadanos")
                        .HasColumnName("idCiudadanos");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("IdElecciones")
                        .HasName("PK__Eleccion__A4B502946D8F97B4");

                    b.HasIndex("IdCandidatos");

                    b.HasIndex("IdCiudadanos");

                    b.ToTable("Elecciones");
                });

            modelBuilder.Entity("ELECCIONES.Models.Partidos", b =>
                {
                    b.Property<int>("IdPartidos")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_Partidos")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("Estado");

                    b.Property<string>("LogoPartido")
                        .HasColumnName("Logo_Partido")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("IdPartidos")
                        .HasName("PK__Partidos__189159DD5031CFB1");

                    b.ToTable("Partidos");
                });

            modelBuilder.Entity("ELECCIONES.Models.PuestoElecto", b =>
                {
                    b.Property<int>("IdPuestoE")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_PuestoE")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("Estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("IdPuestoE")
                        .HasName("PK__Puesto_E__46878D972E299F5C");

                    b.ToTable("Puesto_Electo");
                });

            modelBuilder.Entity("ELECCIONES.Models.Resultado", b =>
                {
                    b.Property<int>("IdResultado")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_Resultado")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdElecciones")
                        .HasColumnName("idElecciones");

                    b.Property<int>("ResultadoTotal")
                        .HasColumnName("Resultado_Total");

                    b.HasKey("IdResultado")
                        .HasName("PK__Resultad__F64F43EE2FB5B041");

                    b.HasIndex("IdElecciones");

                    b.ToTable("Resultado");
                });

            modelBuilder.Entity("ELECCIONES.Models.Candidatos", b =>
                {
                    b.HasOne("ELECCIONES.Models.Partidos", "PartidoPerteneceNavigation")
                        .WithMany("Candidatos")
                        .HasForeignKey("PartidoPertenece")
                        .HasConstraintName("FK_PartidosPe");

                    b.HasOne("ELECCIONES.Models.PuestoElecto", "PuestoAspiraNavigation")
                        .WithMany("Candidatos")
                        .HasForeignKey("PuestoAspira")
                        .HasConstraintName("FK_PuestoAs");
                });

            modelBuilder.Entity("ELECCIONES.Models.Elecciones", b =>
                {
                    b.HasOne("ELECCIONES.Models.Candidatos", "IdCandidatosNavigation")
                        .WithMany("Elecciones")
                        .HasForeignKey("IdCandidatos")
                        .HasConstraintName("FK_Candidatos");

                    b.HasOne("ELECCIONES.Models.Ciudadanos", "IdCiudadanosNavigation")
                        .WithMany("Elecciones")
                        .HasForeignKey("IdCiudadanos")
                        .HasConstraintName("FK_Ciudadanos");
                });

            modelBuilder.Entity("ELECCIONES.Models.Resultado", b =>
                {
                    b.HasOne("ELECCIONES.Models.Elecciones", "IdEleccionesNavigation")
                        .WithMany("Resultado")
                        .HasForeignKey("IdElecciones")
                        .HasConstraintName("FK_Elecciones");
                });
#pragma warning restore 612, 618
        }
    }
}
